{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTab","find","tab","id","className","map","title","isTabCurrent","classNames","href","onClick","handleClick","content","App","useState","setSelectedTabId","current","getTitle","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAOtE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MACNC,EAAeJ,IAAOH,EAAWG,GAEvC,OACE,oBACEC,UAAWI,IACT,CAAE,YAAaD,IAEjB,UAAQ,MAJV,SAOE,mBACEE,KAAI,WAAMN,GACV,UAAQ,UACRO,QAAS,kBAzBL,SAACH,EAAuBL,GACrCK,GACHR,EAAcG,GAuBaS,CAAYJ,EAAcL,IAH3C,SAKGI,KAPEH,UAef,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAWY,cC5CPf,EAAc,CACzB,CAAEM,GAAI,QAASG,MAAO,QAASM,QAAS,eACxC,CAAET,GAAI,QAASG,MAAO,QAASM,QAAS,eACxC,CAAET,GAAI,QAASG,MAAO,QAASM,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASjB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBiB,EAAtB,KAcA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCAda,WACf,IAAMY,EAAUnB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAE5C,OAAOkB,EACHA,EAAQV,MACRT,EAAK,GAAGS,MAUYW,MAGtB,cAAC,EAAD,CACEpB,KAAMA,EACNC,cAAeA,EACfC,cAbgB,SAACG,GACrBa,EAAiBb,EAAIC,WCvBzBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.368878e2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currentTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n  const handleClick = (isTabCurrent: boolean, tab: Tab) => {\n    if (!isTabCurrent) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n            const isTabCurrent = id === currentTab.id;\n\n            return (\n              <li\n                className={classNames(\n                  { 'is-active': isTabCurrent },\n                )}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleClick(isTabCurrent, tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const getTitle = () => {\n    const current = tabs.find(tab => tab.id === selectedTabId);\n\n    return current\n      ? current.title\n      : tabs[0].title;\n  };\n\n  const handleOnClick = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getTitle()}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleOnClick}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}